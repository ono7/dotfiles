# Next Pane: Ctrl-b + o
# toggle between current and previous pane: Ctrl-b + ;
# Specific Direction: Ctrl-b + q (this will show pane numbers; press the number to go to that pane)
# Swap with the next pane: Ctrl-b + }
# Swap with the previous pane: Ctrl-b + {
# enable pane logging

# Clear pane history with prefix + alt + c
# install plugins: c-b + I (capital I)
# uninstall plugins: prefix + alt + u
# update plugins: prefix + u

set -g set-clipboard on
set -g escape-time 0
set -g repeat-time 0

## smart pane switching with awareness of vim splits ##
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

## move around even in copy-mode ##
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi Escape send -X cancel

# Enable 24 bit true colors
# set -ga terminal-overrides ',*:RGB'

# do not exit tmux on destroy
set-option -g detach-on-destroy off

# Improve colors
set -g default-terminal "${TERM}"
# set -as terminal-features ",*:RGB"
set -g terminal-features ",*:RGB"
# set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# (new config start) 2024-12-06 08:21

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off
set -g visual-silence off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# (new config end)

# OSC52 passthrough (this must be set for copy to work over ssh)
set -sa terminal-overrides ',*256color*:Tc:sitm=\E[3m'

if-shell "[[ -n $SSH_CLIENT ]]" 'set -g default-terminal "xterm-256color"'

set-option -g status-position top

unbind q
# unbind-key -T copy-mode-vi H
# unbind-key -T copy-mode-vi L

bind-key P choose-buffer
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

bind-key -T copy-mode-vi v send-keys -X begin-selection \; send-keys -X rectangle-toggle
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T choice-mode-vi h send-keys -X tree-collapse
bind-key -T choice-mode-vi l send-keys -X tree-expand
bind-key -T choice-mode-vi H send-keys -X tree-collapse-all
bind-key -T choice-mode-vi L send-keys -X tree-expand-all
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi L send-keys -X end-of-line
bind-key -T copy-mode-vi H send-keys -X back-to-indentation

## pane and window numbering ##
set -g base-index 1
set -g pane-base-index 1

# renumber windows when one is closed
set -g renumber-windows on

## set window titles ##
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string "#T"

set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}"

set -g allow-rename off

## status bar update interval ##
set -g status-interval 10

setw -g mode-keys vi
set -g status-keys vi
setw -g mode-keys vi

set -g history-limit 30000

## how we split windows ##

# open space at ~/ instead of same dir
bind c new-window

bind - split-window -v -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

## enable mouse ##
set -g mouse on

# bind-key -r j resize-pane -D 7
# bind-key -r k resize-pane -U 7
# bind-key -r h resize-pane -L 7
# bind-key -r l resize-pane -R 7

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

unbind y
bind y setw synchronize-panes

## hide tmux status bar on/off ##
set -g status 'on'

# hide status bar ##
bind h set -g status

set -g monitor-activity on
set -g visual-activity off

###################################### COLOR AND THEME START ################################################3

# Status bar colors - transparent background
set -g status-style 'bg=default,fg=#8087a2'

# Message colors (when you press prefix + :)
set -g message-style 'fg=#E3DED7,bg=default'

# Pane border colors
set -g pane-border-style "fg=#364156"
set -g pane-active-border-style "fg=#8CA7BE"

# Clean window status format - no numbers, just window names
setw -g window-status-format "#[fg=#3E485A]#W  "
setw -g window-status-current-format "#[fg=#8CA7BE,bold]#W  "

# Activity indication with subtle color change
setw -g window-status-activity-style "fg=#D4B97E,bg=default"
set -g window-status-bell-style "fg=#C49A9A,bg=default"

# Status bar layout - clean and consistent
set -g status-justify centre
set-option -g status-left-length 60
set -g status-left "#[fg=#B097B6] 🐇 (#H) "
set -g status-right "#[fg=#93B5B3] %H:%M "

###################################### COLOR AND THEME END ################################################3

set-option -g focus-events on


tmux_conf_copy_to_os_clipboard=true

unbind-key C-b
unbind-key C-q
unbind-key C-a
set-option -g prefix C-b
bind-key C-b send-prefix

# Send prefix to a nested tmux session by doubling the prefix
bind C-b send-prefix

unbind ]
bind-key p paste-buffer
unbind C-z
unbind C-m
unbind m
# bind-key C-m resize-pane -Z

bind-key -n M-] next-window
bind-key -n M-[ previous-window

# move panes faster, in macos, map this to command+(jhkl) in terminal
# bind-key -n C-l select-pane -R
# bind-key -n C-h select-pane -L
# bind-key -n C-k select-pane -U
# bind-key -n C-j select-pane -D


# logging
# bind-key l run-shell 'mkdir -p ~/logs && tmux capture-pane -S - -p > ~/logs/#W-$(date +%Y%m%d-%H%M%S).log && tmux display-message "Log saved to ~/logs/"'
# bind-key l run-shell 'cd "#{pane_current_path}" && tmux capture-pane -S - -p > #W-$(date +%Y%m%d-%H%M%S).log && tmux display-message "Log saved to #{pane_current_path}"'
bind-key l run-shell 'cd "#{pane_current_path}" && tmux capture-pane -S - -p > #W-$(date +%Y%m%d-%H%M%S).log && tmux display-message "Log saved to #{pane_current_path}" && tmux send-keys "clear" Enter && tmux clear-history'

# search sessions
# unbind s
# bind s display-popup -E "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header jump-to-session |\
#     xargs tmux switch-client -t"

# search windows in current session
# unbind f
# bind f display-popup -E "\
#     tmux list-windows -F '#{window_index} #{window_name}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header jump-to-window |\
#     cut -d ' ' -f 1 |\
#     xargs tmux select-window -t"

# zoom with ctr-m without prefix

# bind-key -n M-Z resize-pane -Z
bind-key -n M-Z \
  if-shell "[[ #{window_zoomed_flag} -eq 1 ]]" \
    "resize-pane -Z; if-shell '[[ #{pane_at_top} -eq 0 ]]' 'select-pane -U' 'select-pane -D'" \
    "if-shell '[[ #{pane_at_top} -eq 1 ]]' 'select-pane -D; resize-pane -Z' 'select-pane -U; resize-pane -Z'"

######### TPM INSTALL WITH c-b + I (capital I) #########

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
# this is the last line on TMUX
run '~/.tmux/plugins/tpm/tpm'
